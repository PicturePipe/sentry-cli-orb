# This code is licensed from reelport GmbH to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.
version: 2.1

description: >
  Manage your Sentry projects with sentry-cli. The SENTRY_AUTH_TOKEN environment variable must be
  set to authenticate with Sentry. Also set the $SENTRY_ORG environment variable if you don't want
  to configure each command separately. The Sentry project slug can be configured using the
  $SENTRY_PROJECT environment variable.

examples:
  staging-production-pipeline:
    description: >
      Example workflow for continuous delivery pipeline using testing, staging and production
      environments. Each environment uses a matching Sentry environment.

      Each push to the develop branch triggers a testing deployment with a Sentry release using the
      Git revision as version. Commits and deployment are also tracked by Sentry for this version.

      Each push to the master branch first triggers a staging deployment with a Sentry release
      using the Git tag as version. The same version is used for the manual production deployment.
      Commits and deployments are also tracked by Sentry for this version.
    usage:
      version: 2.1

      orbs:
        sentry-cli: picturepipe/sentry-cli@volatile

      jobs:
        deploy:
          docker:
            - image: buildpack-deps:stable
          parameters:
            env:
              description: >
                Environment to deploy to.
              type: string
          steps:
            - checkout
            - run: echo "Deploy release to << parameters.env >>"

      workflows:
        version: 2
        deploy:
          jobs:
            - sentry-cli/checkout-to-workspace:
                filters:
                  branches:
                    only:
                      - develop
                  tags:
                    only: /.*/
            - sentry-cli/set-version:
                requires:
                  - sentry-cli/checkout-to-workspace
                filters:
                  branches:
                    only:
                      - develop
                  tags:
                    only: /.*/
            - sentry-clirelease-new:
                context: org-global
                name: sentry-release-new-testing
                requires:
                  - sentry-cli/set-version
                filters:
                  branches:
                    only:
                      - develop
            - deploy:
                name: deploy-testing
                env: testing
                requires:
                  - sentry-release-new-testing
                filters:
                  branches:
                    only:
                      - develop
            - sentry-cli/release-finalize:
                context: org-global
                name: sentry-release-finalize-testing
                requires:
                  - deploy-testing
                filters:
                  branches:
                    only:
                      - develop
            - sentry-cli/release-deploy:
                context: org-global
                env: testing
                requires:
                  - sentry-release-finalize-testing
                filters:
                  branches:
                    only:
                      - develop
            - sentry-cli/release-new:
                context: org-global
                name: sentry-release-new-staging
                requires:
                  - sentry-cli/set-version
                filters:
                  branches:
                    ignore: /.*/
                  tags:
                    only: /.*/
            - deploy:
                name: deploy-staging
                env: staging
                requires:
                  - sentry-release-new-staging
                filters:
                  branches:
                    ignore: /.*/
                  tags:
                    only: /.*/
            - sentry-cli/release-finalize:
                context: org-global
                name: sentry-release-finalize-staging
                requires:
                  - deploy-staging
                filters:
                  branches:
                    ignore: /.*/
                  tags:
                    only: /.*/
            - sentry-cli/release-deploy:
                context: org-global
                env: staging
                requires:
                  - sentry-release-finalize-staging
                filters:
                  branches:
                    ignore: /.*/
                  tags:
                    only: /.*/
            - start-production-deployment:
                type: approval
                requires:
                  - sentry-release-finalize-staging
                filters:
                  branches:
                    ignore: /.*/
                  tags:
                    only: /.*/
            - deploy:
                name: deploy-production
                env: production
                requires:
                  - start-production-deployment
                filters:
                  branches:
                    ignore: /.*/
                  tags:
                    only: /.*/
            - sentry-cli/release-deploy:
                context: org-global
                env: production
                requires:
                  - deploy-production
                filters:
                  branches:
                    ignore: /.*/
                  tags:
                    only: /.*/

executors:
  default:
    description: >
      Official sentry-cli Docker image.
    docker:
      - image: getsentry/sentry-cli:1.39.1@sha256:84231714277cc26c76a36d2c00a767e1956c95b0342e358dd2b8b43e1c08fbb8
  scm:
    description: >
      Docker image with common source control management tools installed.
    docker:
      - image: buildpack-deps:stable-scm

default-parameters: &default-parameters
  org:
    description: >
      Sentry organization slug.
    type: string
    default: $SENTRY_ORG

commands:
  checkout-to-workspace:
    description: &checkout-to-workspace-description >
      Check out source code and persist to workspace.
    steps:
      - checkout
      - persist_to_workspace:
          root: /root
          paths:
            - project
  set-version:
    description: &set-version-description >
      Set version for Sentry release, write to file and persist to workspace.

      Will first run `git describe --tags` to set the version. If this fails, the output of
      `sentry-cli releases propose-version` will be used as version.
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Set version for Sentry release
          command: |
            if [ "$(git describe --tags 2>/dev/null)" ]; then
              git describe --tags > sentry-release-version.txt
            else
              sentry-cli releases propose-version > sentry-release-version.txt
            fi
      - persist_to_workspace:
          root: /root
          paths:
            - project/sentry-release-version.txt
  release-new:
    description: &release-new-description >
      Create a new Sentry release. Execute only once per release.
    parameters: &release-new-parameters
      <<: *default-parameters
      project:
        description: >
          Sentry project slug.
        type: string
        default: $SENTRY_PROJECT
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Create a new Sentry release
          command: |
            VERSION=$(cat sentry-release-version.txt)
            sentry-cli releases --org "<< parameters.org >>" new \
              --project "<< parameters.project >>" "$VERSION"
  release-finalize:
    description: &release-finalize-description >
      Finalize a Sentry release and set commits. Execute only once per release.
    parameters: &release-finalize-parameters
      <<: *default-parameters
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Finalize a Sentry release and set commits
          command: |
            VERSION=$(cat sentry-release-version.txt)
            sentry-cli releases --org "<< parameters.org >>" finalize "$VERSION"
            sentry-cli releases --org "<< parameters.org >>" set-commits --auto "$VERSION"
  release-deploy:
    description: &release-deploy-description >
      Create a new Sentry release deployment. Execute for each deployment of a release. If the
      release has been finalized, execute afterwards.
    parameters: &release-deploy-parameters
      <<: *default-parameters
      env:
        description: >
          Sentry environment for this release deployment.
        type: string
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Create a new Sentry release deployment
          command: |
            VERSION=$(cat sentry-release-version.txt)
            sentry-cli releases --org "<< parameters.org >>" deploys "$VERSION" new \
              --env "<< parameters.env >>"

jobs:
  checkout-to-workspace:
    description: *checkout-to-workspace-description
    executor: scm
    steps:
      - checkout-to-workspace
  set-version:
    description: *set-version-description
    executor: default
    steps:
      - run:
          name: Install Git
          command: |
            apk update
            apk add git
      - set-version
  release-new:
    description: *release-new-description
    executor: default
    parameters: *release-new-parameters
    steps:
      - release-new
  release-finalize:
    description: *release-finalize-description
    executor: default
    parameters: *release-finalize-parameters
    steps:
      - release-finalize
  release-deploy:
    description: *release-deploy-description
    executor: default
    parameters: *release-deploy-parameters
    steps:
      - release-deploy:
          env: << parameters.env >>
